var rp=require("request-promise"),Promise=require("bluebird"),xml2js=require("xml2js"),parser=new xml2js.Parser;module.exports=function(e){function t(){n=this}var n,r={headlines:"https://feeds.finance.yahoo.com/rss/2.0/headline?s=",quote:"https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.quotes%20where%20symbol%20in%20(%22",historicalData:"http://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.historicaldata%20where%20symbol%20=%20%22",search:"http://d.yimg.com/aq/autoc?query="};return t.prototype={getHeadlines:function(t){var n=r.headlines+t+"&region=US&lang=en-US";return new Promise(function(t,r){e(n).then(function(e){parser.parseString(e,function(e,n){e?r(e):t(n.rss.channel[0])})}).catch(r)})},getQuote:function(t){var n=r.quote+t+"%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&callback=";return new Promise(function(t,r){e(n,{json:!0}).then(function(e){t(e.query.results)}).catch(r)})},getHistoricalData:function(t,n,a){var o=r.historicalData+t+"%22%20and%20startDate%20=%20%22"+n+"%22%20and%20endDate%20=%20%22"+a+"%22&diagnostics=true&env=store://datatables.org/alltableswithkeys";return new Promise(function(t,n){e(o,{json:!0}).then(function(e){t({data:e.query.results})}).catch(n)})},ticker:function(t){var n=r.search+encodeURIComponent(t)+"&region=US&lang=en-US";return new Promise(function(t,r){e(n,{json:!0}).then(function(e){t({search:e.ResultSet.Query,results:e.ResultSet.Result||[]})}).catch(r)})}},t}(rp);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInlhaG9vLmZpbmFuY2UuanMiXSwibmFtZXMiOlsicnAiLCJyZXF1aXJlIiwiUHJvbWlzZSIsInhtbDJqcyIsInBhcnNlciIsIlBhcnNlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJyIiwiWWFob29GaW5hbmNlQVBJIiwic2VsZiIsInRoaXMiLCJlbmRwb2ludHMiLCJoZWFkbGluZXMiLCJxdW90ZSIsImhpc3RvcmljYWxEYXRhIiwic2VhcmNoIiwicHJvdG90eXBlIiwiZ2V0SGVhZGxpbmVzIiwidGlja2VyIiwidXJsIiwicmVzb2x2ZSIsInJlamVjdCIsInRoZW4iLCJ4bWwiLCJwYXJzZVN0cmluZyIsImVyciIsImpzIiwicnNzIiwiY2hhbm5lbCIsImNhdGNoIiwiZ2V0UXVvdGUiLCJqc29uIiwicmVzIiwicXVlcnkiLCJyZXN1bHRzIiwiZ2V0SGlzdG9yaWNhbERhdGEiLCJzdGFydCIsImVuZCIsImRhdGEiLCJlbmNvZGVVUklDb21wb25lbnQiLCJSZXN1bHRTZXQiLCJRdWVyeSIsIlJlc3VsdCJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBSUEsSUFBS0MsUUFBUSxtQkFDYkMsUUFBVUQsUUFBUSxZQUNsQkUsT0FBU0YsUUFBUSxVQUNqQkcsT0FBUyxHQUFJRCxRQUFPRSxNQUV4QkMsUUFBT0MsUUFBVSxTQUFVQyxHQVV6QixRQUFTQyxLQUNQQyxFQUFPQyxLQVZULEdBQUlELEdBRUFFLEdBQ0ZDLFVBQVcsc0RBQ1hDLE1BQU8sb0hBQ1BDLGVBQWdCLHlIQUNoQkMsT0FBUSxvQ0EyRFYsT0FwREFQLEdBQWdCUSxXQUNkQyxhQUFjLFNBQVNDLEdBQ3JCLEdBQUlDLEdBQU1SLEVBQVVDLFVBQVlNLEVBQVMsdUJBQ3pDLE9BQU8sSUFBSWpCLFNBQVEsU0FBU21CLEVBQVNDLEdBQ25DZCxFQUFFWSxHQUNDRyxLQUFLLFNBQVNDLEdBQ2JwQixPQUFPcUIsWUFBWUQsRUFBSyxTQUFTRSxFQUFLQyxHQUNqQ0QsRUFBS0osRUFBT0ksR0FDVkwsRUFBUU0sRUFBR0MsSUFBSUMsUUFBUSxRQUcvQkMsTUFBTVIsTUFJYlMsU0FBVSxTQUFTWixHQUNqQixHQUFJQyxHQUFNUixFQUFVRSxNQUFRSyxFQUFTLGlGQUNyQyxPQUFPLElBQUlqQixTQUFRLFNBQVNtQixFQUFTQyxHQUNuQ2QsRUFBRVksR0FBTVksTUFBTSxJQUNYVCxLQUFLLFNBQVNVLEdBQ2JaLEVBQVFZLEVBQUlDLE1BQU1DLFdBRW5CTCxNQUFNUixNQUliYyxrQkFBbUIsU0FBU2pCLEVBQVFrQixFQUFPQyxHQUN6QyxHQUFJbEIsR0FBTVIsRUFBVUcsZUFBaUJJLEVBQVMsa0NBQW9Da0IsRUFBUSxnQ0FBa0NDLEVBQU0sbUVBQ2xJLE9BQU8sSUFBSXBDLFNBQVEsU0FBU21CLEVBQVNDLEdBQ25DZCxFQUFFWSxHQUFNWSxNQUFNLElBQ1hULEtBQUssU0FBU1UsR0FDYlosR0FBU2tCLEtBQU1OLEVBQUlDLE1BQU1DLFlBRTFCTCxNQUFNUixNQUliSCxPQUFRLFNBQVNlLEdBQ2YsR0FBSWQsR0FBTVIsRUFBVUksT0FBU3dCLG1CQUFtQk4sR0FBUyx1QkFDekQsT0FBTyxJQUFJaEMsU0FBUSxTQUFTbUIsRUFBU0MsR0FDbkNkLEVBQUVZLEdBQU1ZLE1BQU0sSUFDWFQsS0FBSyxTQUFTVSxHQUNiWixHQUNFTCxPQUFRaUIsRUFBSVEsVUFBVUMsTUFDdEJQLFFBQVNGLEVBQUlRLFVBQVVFLGVBRzFCYixNQUFNUixPQUtSYixHQUNOVCIsImZpbGUiOiJ5YWhvby5maW5hbmNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJwID0gcmVxdWlyZSgncmVxdWVzdC1wcm9taXNlJyk7XG52YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG52YXIgeG1sMmpzID0gcmVxdWlyZSgneG1sMmpzJyk7XG52YXIgcGFyc2VyID0gbmV3IHhtbDJqcy5QYXJzZXIoKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoZnVuY3Rpb24ocikge1xuICB2YXIgc2VsZjtcblxuICB2YXIgZW5kcG9pbnRzID0ge1xuICAgIGhlYWRsaW5lczogJ2h0dHBzOi8vZmVlZHMuZmluYW5jZS55YWhvby5jb20vcnNzLzIuMC9oZWFkbGluZT9zPScsXG4gICAgcXVvdGU6ICdodHRwczovL3F1ZXJ5LnlhaG9vYXBpcy5jb20vdjEvcHVibGljL3lxbD9xPXNlbGVjdCUyMColMjBmcm9tJTIweWFob28uZmluYW5jZS5xdW90ZXMlMjB3aGVyZSUyMHN5bWJvbCUyMGluJTIwKCUyMicsXG4gICAgaGlzdG9yaWNhbERhdGE6ICdodHRwOi8vcXVlcnkueWFob29hcGlzLmNvbS92MS9wdWJsaWMveXFsP3E9c2VsZWN0JTIwKiUyMGZyb20lMjB5YWhvby5maW5hbmNlLmhpc3RvcmljYWxkYXRhJTIwd2hlcmUlMjBzeW1ib2wlMjA9JTIwJTIyJyxcbiAgICBzZWFyY2g6ICdodHRwOi8vZC55aW1nLmNvbS9hcS9hdXRvYz9xdWVyeT0nXG4gIH1cblxuICBmdW5jdGlvbiBZYWhvb0ZpbmFuY2VBUEkoKSB7XG4gICAgc2VsZiA9IHRoaXM7XG4gIH1cblxuICBZYWhvb0ZpbmFuY2VBUEkucHJvdG90eXBlID0ge1xuICAgIGdldEhlYWRsaW5lczogZnVuY3Rpb24odGlja2VyKSB7XG4gICAgICB2YXIgdXJsID0gZW5kcG9pbnRzLmhlYWRsaW5lcyArIHRpY2tlciArICcmcmVnaW9uPVVTJmxhbmc9ZW4tVVMnO1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICByKHVybClcbiAgICAgICAgICAudGhlbihmdW5jdGlvbih4bWwpIHtcbiAgICAgICAgICAgIHBhcnNlci5wYXJzZVN0cmluZyh4bWwsIGZ1bmN0aW9uKGVyciwganMpIHtcbiAgICAgICAgICAgICAgaWYoZXJyKSByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgZWxzZSByZXNvbHZlKGpzLnJzcy5jaGFubmVsWzBdKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2gocmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBnZXRRdW90ZTogZnVuY3Rpb24odGlja2VyKSB7XG4gICAgICB2YXIgdXJsID0gZW5kcG9pbnRzLnF1b3RlICsgdGlja2VyICsgJyUyMikmZm9ybWF0PWpzb24mZW52PXN0b3JlJTNBJTJGJTJGZGF0YXRhYmxlcy5vcmclMkZhbGx0YWJsZXN3aXRoa2V5cyZjYWxsYmFjaz0nO1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICByKHVybCwge2pzb246IHRydWV9KVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgICAgcmVzb2x2ZShyZXMucXVlcnkucmVzdWx0cyk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2gocmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBnZXRIaXN0b3JpY2FsRGF0YTogZnVuY3Rpb24odGlja2VyLCBzdGFydCwgZW5kKSB7XG4gICAgICB2YXIgdXJsID0gZW5kcG9pbnRzLmhpc3RvcmljYWxEYXRhICsgdGlja2VyICsgJyUyMiUyMGFuZCUyMHN0YXJ0RGF0ZSUyMD0lMjAlMjInICsgc3RhcnQgKyAnJTIyJTIwYW5kJTIwZW5kRGF0ZSUyMD0lMjAlMjInICsgZW5kICsgJyUyMiZkaWFnbm9zdGljcz10cnVlJmVudj1zdG9yZTovL2RhdGF0YWJsZXMub3JnL2FsbHRhYmxlc3dpdGhrZXlzJztcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcih1cmwsIHtqc29uOiB0cnVlfSlcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICAgIHJlc29sdmUoe2RhdGE6IHJlcy5xdWVyeS5yZXN1bHRzfSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2gocmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICB0aWNrZXI6IGZ1bmN0aW9uKHF1ZXJ5KSB7XG4gICAgICB2YXIgdXJsID0gZW5kcG9pbnRzLnNlYXJjaCArIGVuY29kZVVSSUNvbXBvbmVudChxdWVyeSkgKyAnJnJlZ2lvbj1VUyZsYW5nPWVuLVVTJztcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcih1cmwsIHtqc29uOiB0cnVlfSlcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgICAgICBzZWFyY2g6IHJlcy5SZXN1bHRTZXQuUXVlcnksXG4gICAgICAgICAgICAgIHJlc3VsdHM6IHJlcy5SZXN1bHRTZXQuUmVzdWx0IHx8IFtdXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChyZWplY3QpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBZYWhvb0ZpbmFuY2VBUEk7XG59KShycCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
